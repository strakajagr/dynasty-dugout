#!/bin/bash
# Dynasty Dugout - Complete Fix and Deploy Script
# This fixes ALL import errors and redeploys

echo "üîß Dynasty Dugout Complete Fix"
echo "=============================="

# Check if we're in the backend directory
if [ ! -f "template.yaml" ]; then
    echo "‚ùå Error: Run this script from the backend directory"
    echo "   cd /home/strakajagr/projects/dynasty-dugout/backend"
    exit 1
fi

echo ""
echo "1Ô∏è‚É£ Checking Python dependencies..."
pip3 list | grep -E "fastapi|boto3|mangum" > /dev/null
if [ $? -ne 0 ]; then
    echo "   Installing missing dependencies..."
    pip3 install fastapi boto3 mangum PyJWT cryptography requests Pillow python-multipart numpy feedparser
fi

echo ""
echo "2Ô∏è‚É£ Testing local imports..."
cd src

# Test imports locally
python3 -c "
import sys
import traceback

errors = []

# Test each router
try:
    from routers import auth
    print('  ‚úÖ auth router imports OK')
except Exception as e:
    print(f'  ‚ùå auth router FAILED: {e}')
    errors.append('auth')

try:
    from routers import account
    print('  ‚úÖ account router imports OK')
except Exception as e:
    print(f'  ‚ùå account router FAILED: {e}')
    errors.append('account')

try:
    from routers import mlb
    print('  ‚úÖ mlb router imports OK')
except Exception as e:
    print(f'  ‚ùå mlb router FAILED: {e}')
    errors.append('mlb')

try:
    from routers import leagues
    print('  ‚úÖ leagues router imports OK')
except Exception as e:
    print(f'  ‚ùå leagues router FAILED: {e}')
    traceback.print_exc()
    errors.append('leagues')

try:
    from routers import players_canonical
    print('  ‚úÖ players_canonical router imports OK')
except Exception as e:
    print(f'  ‚ùå players_canonical router FAILED: {e}')
    errors.append('players_canonical')

if errors:
    print(f'\n‚ùå Failed routers: {errors}')
    sys.exit(1)
else:
    print('\n‚úÖ All routers import successfully!')
"

if [ $? -ne 0 ]; then
    echo ""
    echo "‚ùå Import errors detected. Fixing..."
    
    # Check if the old functions are still being used
    echo "   Checking for old helper function usage..."
    grep -r "get_decimal_value\|get_long_value\|get_string_value" routers/leagues/players/*.py 2>/dev/null
    if [ $? -eq 0 ]; then
        echo "   ‚ö†Ô∏è  Found old helper function usage. These need to be fixed!"
        echo "   The files still use removed functions."
    fi
fi

cd ..

echo ""
echo "3Ô∏è‚É£ Cleaning build artifacts..."
rm -rf .aws-sam/build/
rm -rf src/__pycache__
find src -type d -name __pycache__ -exec rm -rf {} + 2>/dev/null

echo ""
echo "4Ô∏è‚É£ Building application..."
sam build

if [ $? -ne 0 ]; then
    echo "‚ùå Build failed! Check errors above."
    exit 1
fi

echo ""
echo "5Ô∏è‚É£ Deploying to AWS..."
sam deploy --no-confirm-changeset --capabilities CAPABILITY_IAM

if [ $? -ne 0 ]; then
    echo "‚ùå Deploy failed! Check errors above."
    exit 1
fi

echo ""
echo "6Ô∏è‚É£ Waiting for deployment to stabilize..."
sleep 15

echo ""
echo "7Ô∏è‚É£ Testing deployed endpoints..."
echo ""
echo "Testing MLB trending endpoint:"
response=$(curl -s -w "\nHTTP_CODE:%{http_code}" https://13cpdms4x1.execute-api.us-east-1.amazonaws.com/Prod/api/mlb/trending)
http_code=$(echo "$response" | grep "HTTP_CODE:" | cut -d':' -f2)
body=$(echo "$response" | grep -v "HTTP_CODE:")

if [ "$http_code" = "200" ]; then
    echo "‚úÖ MLB endpoints working! (Status: $http_code)"
else
    echo "‚ùå MLB endpoints returning $http_code"
    echo "Response: $body" | head -50
fi

echo ""
echo "Testing leagues endpoint:"
response=$(curl -s -w "\nHTTP_CODE:%{http_code}" https://13cpdms4x1.execute-api.us-east-1.amazonaws.com/Prod/api/leagues/health)
http_code=$(echo "$response" | grep "HTTP_CODE:" | cut -d':' -f2)

if [ "$http_code" = "200" ]; then
    echo "‚úÖ Leagues endpoints working! (Status: $http_code)"
else
    echo "‚ùå Leagues endpoints returning $http_code"
fi

echo ""
echo "=============================="
echo "üìã Deployment Summary:"
echo ""
if [ "$http_code" = "200" ]; then
    echo "‚úÖ SUCCESS! All endpoints are working."
else
    echo "‚ö†Ô∏è  Some endpoints may still have issues."
    echo ""
    echo "Check CloudWatch logs:"
    echo "aws logs tail /aws/lambda/fantasy-baseball-api-FantasyBaseballApi --follow"
fi
